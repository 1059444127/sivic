#
#	$URL$
#	$Rev$
#	$Author$
#	$Date$
#

VTK_DIR         = /netopt/lib/vtk-5.6
VTK6_DIR        = /opt/src/freeware/vtk/VTK-6.3.0/Linux_x86_64_debug_install/./lib/cmake/vtk-6.3/
KWW_DIR     	= /netopt/kwwidgets_2.0_56/lib/KWWidgets
KWW6_DIR     	= /opt/src/freeware/kwwidgets/KWWidgets_VTK6_install/
DCMTK_DIR       = /netopt/dicom
# check test_data out of radiology trac into test_data
SIVIC_ROOT      = $(realpath $(dir $(lastword $(MAKEFILE_LIST))))
SVK_TEST_ROOT   = ${SIVIC_ROOT}/test_data
OUTPUT_LOG      = ${PWD}/ctest_logs/atom 
#CMAKE_DIR       = /netopt/bin
CMAKE_DIR       = /usr/bin
CMAKE_DIR_GE    = /usr/local/bin
XVFB_RUN        = ${SIVIC_ROOT}/tests/scripts/xvfb-run
SVN_COMMAND     = /netopt/bin/svn 
CLAPACK_DIR     = /opt/src/freeware/clapack/clapack-3.2.1-CMAKE
ITK_DIR         = /netopt/InsightToolkit/InsightToolkit-4.4.1/lib/cmake/ITK-4.4
ADD_LINK_DIRS   = 


#   Mac OS X
ifeq ($(OSTYPE), darwin)
	DCMTK_DIR     = /usr/local/dicom
	CLAPACK_DIR   = /Users/jasonc/freeware/clapack-3.2.1-CMAKE
	VTK_DIR       = /usr/local/lib/vtk-5.6
	ITK_DIR       = /usr/local/ITK_UNIVERSAL/lib/cmake/ITK-4.4
	CONFIG_OSIRIX = -DBUILD_OSIRIX=ON 
	ADD_LINK_DIRS = -DADD_LINK_DIRS=/opt/local/lib
endif

ifeq ($(OS), SunOS)
if ( "`/bin/uname`" == "SunOS" ) then
	GETOPT_LIB = /netopt/lib/local/libgnu.a
endif


#
#   Add flags for source code coverage determination 
#

CMAKE_CXX_FLAGS_TEST = "-g -O0 -fprofile-arcs -ftest-coverage"

RM_CACHE          = ${RM} CMakeCache.txt;
CONFIG_OPTS       = -DVTK_DIR=${VTK_DIR} -DKWWidgets_DIR=${KWW_DIR} -DBUILD_CLAPACK=ON -DBUILD_ITK=ON -DITK_DIR=${ITK_DIR} -DCLAPACK_DIR=${CLAPACK_DIR} -DDCMTK_DIR=${DCMTK_DIR} -DBUILD_APPS=ON -DBUILD_EXAMPLES=OFF -DGETOPT_LIB=${GETOPT_LIB} -DBUILD_SIVIC=ON -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS} -DSVNCOMMAND=${SVN_COMMAND} -DCMAKE_VERBOSE_MAKEFILE=ON -DMAKECOMMAND="/usr/bin/gmake -i -j4" 
CONFIG_OPTS_VTK6  = -DVTK_DIR=${VTK6_DIR} -DKWWidgets_DIR=${KWW6_DIR} -DBUILD_CLAPACK=ON -DBUILD_ITK=ON -DITK_DIR=${ITK_DIR} -DCLAPACK_DIR=${CLAPACK_DIR} -DDCMTK_DIR=${DCMTK_DIR} -DBUILD_APPS=ON -DBUILD_EXAMPLES=OFF -DGETOPT_LIB=${GETOPT_LIB} -DBUILD_SIVIC=ON -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS} -DSVNCOMMAND=${SVN_COMMAND} -DCMAKE_VERBOSE_MAKEFILE=ON -DMAKECOMMAND="/usr/bin/gmake -i -j4" 
CONFIG_BASE       = ${CMAKE_DIR}/cmake ${CONFIG_OPTS} 
CONFIG_BASE_GE    = ${CMAKE_DIR_GE}/cmake ${CONFIG_OPTS} 
CONFIG_BASE_VTK6  = ${CMAKE_DIR}/cmake ${CONFIG_OPTS_VTK6} 
CONFIG_BASE_GE_VTK6 = ${CMAKE_DIR_GE}/cmake ${CONFIG_OPTS_VTK6} 
CONFIG_TEST_ON    = -DUSE_OFF_SCREEN_TESTING=ON  -DBUILD_TESTING=ON  -DBUILD_GRAPHICS_TESTING=ON -DSVK_TEST_ROOT=${SVK_TEST_ROOT} -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS_TEST} -DDART_TESTING_TIMEOUT=6000
CONFIG_TEST_OFF   = -DUSE_OFF_SCREEN_TESTING=OFF -DBUILD_TESTING=OFF -DBUILD_GRAPHICS_TESTING=OFF 
CONFIG_UCSF_ON    = -DUCSF_INTERNAL=ON  -DBUILD_CREATE_RAW=ON 
CONFIG_UCSF_OFF   = -DUCSF_INTERNAL=OFF -DBUILD_CREATE_RAW=OFF 
CONFIG_OSIRIX     = -DBUILD_OSIRIX=OFF 
CONFIG_GE_CONSOLE = -DBUILD_GE_CONSOLE=ON
CONFIG_RELEASE    = -DCMAKE_BUILD_TYPE=Release
CONFIG_DEBUG      = -DCMAKE_BUILD_TYPE=Debug
TEST_ROOT = ${SVK_TEST_ROOT}/results_tmp



clean_results:
	${RM} -rf ${TEST_ROOT}/

update_test_cases:
	cd ${SVK_TEST_ROOT}; ${SVN_COMMAND} up;



#
#   Configure build for Experimental / Nightly
#
configure_testing: clean_results 
	(${RM_CACHE} ${CONFIG_BASE} ${CONFIG_TEST_ON} ${CONFIG_UCSF_ON} ${CONFIG_OSIRIX} ${CONFIG_RELEASE} ${ADD_LINK_DIRS} ${SIVIC_ROOT}/) 
configure_testing_vtk6: clean_results 
	(${RM_CACHE} ${CONFIG_BASE_VTK6} ${CONFIG_TEST_ON} ${CONFIG_UCSF_ON} ${CONFIG_OSIRIX} ${CONFIG_RELEASE} ${ADD_LINK_DIRS} ${SIVIC_ROOT}/) 

#
# 	Configure for debug, but no testing
#
configure_debug: clean_results 
	(${RM_CACHE} ${CONFIG_BASE} ${CONFIG_TEST_OFF} ${CONFIG_UCSF_ON} ${CONFIG_OSIRIX} ${CONFIG_DEBUG} ${ADD_LINK_DIRS} ${SIVIC_ROOT}/) 

configure_debug_vtk6: clean_results 
	(${RM_CACHE} ${CONFIG_BASE_VTK6} ${CONFIG_TEST_OFF} ${CONFIG_UCSF_ON} ${CONFIG_OSIRIX} ${CONFIG_DEBUG} ${ADD_LINK_DIRS} ${SIVIC_ROOT}/) 

#
# 	configure for sourceforge release (not OsiriX)
#
configure_dist: clean_results 
	(${RM_CACHE} ${CONFIG_BASE} ${CONFIG_TEST_OFF} ${CONFIG_UCSF_OFF} ${CONFIG_OSIRIX} ${CONFIG_RELEASE} ${ADD_LINK_DIRS} ${SIVIC_ROOT}/) 


#
# 	configure for UCSF release (not OsiriX)
#
configure_dist_UCSF: clean_results 
	(${RM_CACHE} ${CONFIG_BASE} ${CONFIG_TEST_OFF} ${CONFIG_UCSF_ON} ${CONFIG_OSIRIX} ${CONFIG_RELEASE} ${ADD_LINK_DIRS} ${SIVIC_ROOT}/) 



#
# configure for sourceforge release of GE Console version (not OsiriX)
# configure and build on ESE host
#
configure_GE_dist: clean_results 
	(${RM_CACHE} ${CONFIG_BASE_GE} ${CONFIG_TEST_OFF} ${CONFIG_UCSF_OFF} ${CONFIG_OSIRIX} ${CONFIG_GE_CONSOLE} ${CONFIG_RELEASE} ${SIVIC_ROOT}/) 


############################################################
#   Build standard distribution for release (not osirix)
############################################################
std_dist: configure_dist
	cpack

############################################################
#   Build GE Console distribution for release (not osirix)
############################################################
GE_dist: configure_GE_dist
	cpack


#   
#   Run odd numbered tests through memory check (dynamic analysis)      
#   
experimental: configure_testing
	${XVFB_RUN} ${CMAKE_DIR}/ctest -D ExperimentalStart     --verbose --output-log ${OUTPUT_LOG} 
	${XVFB_RUN} ${CMAKE_DIR}/ctest -D ExperimentalConfigure --verbose --output-log ${OUTPUT_LOG} 
	${XVFB_RUN} ${CMAKE_DIR}/ctest -D ExperimentalBuild     --verbose --output-log ${OUTPUT_LOG} 
	${XVFB_RUN} ${CMAKE_DIR}/ctest -D ExperimentalMemCheck  --verbose --output-log ${OUTPUT_LOG} -R MCHK
	${XVFB_RUN} ${CMAKE_DIR}/ctest -D ExperimentalTest      --verbose --output-log ${OUTPUT_LOG}
	${XVFB_RUN} ${CMAKE_DIR}/ctest -D ExperimentalCoverage  --verbose --output-log ${OUTPUT_LOG} 
	${XVFB_RUN} ${CMAKE_DIR}/ctest -D ExperimentalSubmit    --verbose --output-log ${OUTPUT_LOG}

#   Does not perform memory checking
experimental_fast: configure_testing
	${XVFB_RUN} ${CMAKE_DIR}/ctest -D Experimental --output-log ${OUTPUT_LOG} 
experimental_fast_vtk6: configure_testing_vtk6
	${XVFB_RUN} ${CMAKE_DIR}/ctest -D Experimental --output-log ${OUTPUT_LOG} 

nightly: configure_testing
	${XVFB_RUN} ${CMAKE_DIR}/ctest -D Nightly --verbose --build-nocmake --output-log ${OUTPUT_LOG} 

